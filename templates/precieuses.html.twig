<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <meta name="description" content="Emma Pierre's Jewelry Shop"/>
    <meta name="keywords" content="Bijoux, Pierre précieuse, Jewelry"/>
    <meta name="author" content="ESGI's Brahim, Cihan Jules and Kenza"/>
    <link rel="icon" href="/assets/images/favicon_io/favicon.ico"/>
    <script src="/components/navigation.js"></script>
    <script src="/components/navigation/footer.js"></script>
    <script src="/components/form/button.js"></script>
    <script src="/components/choose.js"></script>
    <script src="/components/product.js"></script>
    <title>Emma Pierre</title>
    <link rel="preconnect" href="https://fonts.googleapis.com"/>
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin/>
    <link href="https://fonts.googleapis.com/css2?family=Jost&display=swap" rel="stylesheet"/>
</head>
<body>
<c-nav></c-nav>
<div class="wrapper">
    <c-choose></c-choose>
    <p>Bijoux composés avec des pierres fines ou précieuses soigneusement sélectionnées pour leur
        <strong>couleur</strong> spécifique
        et/ou leur <strong>taille</strong> particulière les mettant particulièrement en valeur.
    </p>
    <nav class="filter-wrapper" data-main-category="family" data-type="boucles">
        <div class="main-categories-wrapper">
            <button class="active" id="family">Family</button>
            <button id="trilogy">Trilogy</button>
            <button id="rana">Rana</button>
            <button id="pearl">Pearl</button>
        </div>
        <hr/>
        <div class="sub-categories-wrapper">
            <button id="bracelet">Bracelet</button>
            <button id="collier">Collier</button>
            <button class="active" id="boucles">Boucles</button>
        </div>
    </nav>
    <section id="product">
        <div class="products-wrapper">
            <!-- Product -->
            <c-product src="/assets/images/products/1.jpg" data-main-category="family" data-type="boucles">
                <span slot="name">Boucles d'oreilles</span>
                <span slot="price">120€</span>
            </c-product>
            <c-product src="/assets/images/products/1.jpg" data-main-category="trilogy" data-type="boucles">
                <span slot="name">trilogy</span>
                <span slot="price">120€</span>
            </c-product>
            <c-product src="/assets/images/products/1.jpg" data-main-category="rana" data-type="boucles">
                <span slot="name">Borana lles</span>
                <span slot="price">120€</span>
            </c-product>
            <c-product src="/assets/images/products/1.jpg" data-main-category="pearl" data-type="boucles">
                <span slot="name">Boui pearl lles</span>
                <span slot="price">120€</span>
            </c-product>
            <c-product src="/assets/images/products/1.jpg" data-main-category="family" data-type="boucles">
                <span slot="name">Boucles d'oreilles</span>
                <span slot="price">120€</span>
            </c-product>
        </div>
        <div id="pagination">
            <button>&lt;</button>
            <button>1</button>
            <button>2</button>
            <button>3</button>
            <button>4</button>
            <button>5</button>
            <button>&gt;</button>
        </div>
    </section>
</div>
<c-footer></c-footer>
</body>
<script>
    fetch('/api/products/precieuses').then(res => res.json()).then(data => {
        console.table(data);
        const products = document.querySelector('.products-wrapper')
        data.forEach(product => {
            const cProduct = document.createElement('c-product')
            cProduct.setAttribute('src', product.image)
            cProduct.setAttribute('href', '/precieuses/' + product.id)
            cProduct.innerHTML = `<span slot="name">${product.nom}</span><span slot="price">${product.prix}€</span>`
            products.appendChild(cProduct)
        });
    });
</script>
<style>
    * {
        box-sizing: border-box;
    }

    html, body {
        margin: 0;
        padding: 0;
        font-family: 'Jost', sans-serif;
    }

    .wrapper {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 0 20px;
        max-width: 1080px;
        margin: auto;
    }

    .wrapper > p {
        text-align: center;
        font-size: 1.2rem;
        margin: 80px 20px;
    }

    .filter-wrapper {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        width: 100%;
        gap: 10px;
        margin: 2rem 0;

    }

    .filter-wrapper button {
        font-family: "Jost", sans-serif;
        font-size: 1.2rem;
        text-transform: uppercase;
        border: none;
        outline: none;
        background: none;
    }

    .filter-wrapper button.active {
        color: #F7645D;
        border-bottom: 2px solid #F7645D;
    }

    .filter-wrapper hr {
        width: 100%;
        max-width: 300px;
        border: 1px solid #000;
    }

    .main-categories-wrapper {
        display: flex;
        align-items: center;
        justify-content: space-between;
        width: 100%;
        max-width: 450px;
    }

    .products-wrapper {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        justify-content: space-around;
        gap: 20px;
        width: 100%;
        max-width: 1200px;
    }

    #pagination {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
        margin: 2rem 0;
    }

    #pagination button {
        font-family: "Jost", sans-serif;
        font-size: 1.2rem;
        text-transform: uppercase;
        border: none;
        outline: none;
        background: none;
    }

</style>
<script>
    const filter = document.querySelector('.filter-wrapper')
    const buttons = document.querySelectorAll('.main-categories-wrapper button')

    function renderFilter() {
        const mainCategory = filter.getAttribute('data-main-category')
        const subCategory = filter.getAttribute('data-type')
        const products = document.querySelectorAll('c-product')
        products.forEach(product => {
            if (mainCategory === product.getAttribute("data-main-category") && subCategory === product.getAttribute("data-type")) {
                product.style.display = 'block'
            } else {
                product.style.display = 'none'
            }
        })
    }

    renderFilter();
    buttons.forEach(button => {
        button.addEventListener('click', () => {
            buttons.forEach(button => {
                button.classList.remove('active')
                button.style.display = 'inline-block'
            })
            button.classList.add('active')
            filter.setAttribute('data-main-category', button.innerText.toLowerCase())
            document.querySelectorAll(".sub-categories-wrapper button").forEach(button => {
                button.style.display = 'inline-block'
            });
            switch (button.innerText.toLowerCase()) {
                case "family":
                    document.querySelector("#boucles").style.display = "none";
                    break;
                case "trilogy":
                    document.querySelector("#bracelet").style.display = "none";
                    document.querySelector("#boucles").style.display = "none";
                    break;
                case "rana":
                    document.querySelector("#bracelet").style.display = "none";
                    break;
                case "pearl":
                    document.querySelector("#bracelet").style.display = "none";
                    break;
                default:
                    break;
            }

            renderFilter();
        });
    })
    const subButtons = document.querySelectorAll('.sub-categories-wrapper button')
    subButtons.forEach(button => {
        button.addEventListener('click', () => {
            subButtons.forEach(button => button.classList.remove('active'))
            button.classList.add('active')
            filter.setAttribute('data-type', button.innerText.toLowerCase())
            renderFilter();
        })
    })


</script>
</html>
